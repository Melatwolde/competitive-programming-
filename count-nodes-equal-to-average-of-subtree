class Solution:
    def averageOfSubtree(self, root: Optional[TreeNode]) -> int:
        def helper(node):
            if not node:
                return (0,0,0)
            left_sum, left_count, left_matches = helper(node.left)
            right_sum, right_count, right_matches = helper(node.right)
            
            total_sum = left_sum + right_sum + node.val
            total_count = left_count + right_count + 1
            
            matches = left_matches + right_matches + (total_sum // total_count == node.val)
            return [total_sum, total_count, matches]
        
        return helper(root)[2]
